upstream app {
    keepalive 128;
    # server isucondition-1.t.isucon.dev:3000;
    server isucondition-2.t.isucon.dev:3000;
    server isucondition-3.t.isucon.dev:3000;
}

server {
    listen 443 ssl http2;

    ssl_certificate /etc/nginx/certificates/tls-cert.pem;
    ssl_certificate_key /etc/nginx/certificates/tls-key.pem;

    index index.html;

    location /assets {
        root /home/isucon/webapp/public/;
        expires 24h;
        add_header Cache-Control public;

        open_file_cache max=100;  # file descriptor などを cache

        gzip on;  # cpu 使うのでメリット・デメリット見極める必要あり。gzip_static 使えるなら事前にgzip圧縮した上でそちらを使う。
        gzip_types text/html text/css application/javascript application/json font/woff font/ttf image/gif image/png image/jpeg image/svg+xml image/x-icon application/octet-stream;
        gzip_disable "msie6";
        gzip_static on;  # nginx configure時に --with-http_gzip_static_module 必要
    }

    location / {
        root /home/isucon/webapp/public/;
        expires 24h;
        add_header Cache-Control public;

        open_file_cache max=100;  # file descriptor などを cache

        gzip on;  # cpu 使うのでメリット・デメリット見極める必要あり。gzip_static 使えるなら事前にgzip圧縮した上でそちらを使う。
        gzip_types text/html text/css application/javascript application/json font/woff font/ttf image/gif image/png image/jpeg image/svg+xml image/x-icon application/octet-stream;
        gzip_disable "msie6";
        gzip_static on;  # nginx configure時に --with-http_gzip_static_module 必要

        try_files $uri $uri/ @webapp;
    }

    location /isu {
        root /home/isucon/webapp/public/;
        expires 24h;
        add_header Cache-Control public;

        open_file_cache max=100;  # file descriptor などを cache

        gzip on;  # cpu 使うのでメリット・デメリット見極める必要あり。gzip_static 使えるなら事前にgzip圧縮した上でそちらを使う。
        gzip_types text/html text/css application/javascript application/json font/woff font/ttf image/gif image/png image/jpeg image/svg+xml image/x-icon application/octet-stream;
        gzip_disable "msie6";
        gzip_static on;  # nginx configure時に --with-http_gzip_static_module 必要

        try_files $uri /index.html;
    }

    location /api/condition/ {
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header Host $http_host;

        limit_except GET {
            proxy_pass http://app;
        }
        proxy_pass http://127.0.0.1:3000;
    }

    location @webapp {
        proxy_set_header Host $http_host;
        proxy_pass http://127.0.0.1:3000;
    }
}
